{
  "hash": "bac3882fefcb9bf98fc348a320b75821",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Modeling Single Good Market\"\nauthor: \"Nodar Okroshiashvili\"\ndate: \"2019-06-16\"\ndate-modified: \"2025-09-26\"\ntitle-block-banner: true\ncategories:\n    - Economics\n    - Python\n\ntags: [Economics, Python, Demand and Supply, Economic Modeling]\n\nabstract: |\n  Implementation of one good market economy in Python, where supply and demand are linear functions of price and agents of this economy are price takers.\n\nimage: \"image.jpg\"\n---\n\n# Introduction\n\nIn this blog, I want to review simple one good market economy, where supply and demand are linear functions of price and agents of this economy are price takers. Those agents are divided into two categories: buyers and sellers. The price of a product is determined by the interaction of demand and supply or in other words buyers and sellers.\nHere, the buyer is associated with demand and seller is associated with supply. Henceforth, in this market, there are no frictions or market imperfections (more on this later) and market is competitive. So, this should be a very simple environment, where buyer demands product and seller sells this product at a given price. Before continue, it's worth to define some key terms and notions in our simple market model.\n\nFirst, let's start by defining what is economics. In simple words, economics is the social science which studies production, consumption, and distribution of goods and services.\nI used, three main terms above, which constitutes our simple economy: demand, supply, and price.\n\n> **Demand** is all the quantities of good or service that buyers are willing and able to buy at all possible prices.\n\nDemand is based on needs and wants. From the consumer point of view, we all know the difference but from an economist's perspective, they are the same. Moreover, demand is based on the ability to pay, If the agent cannot afford to pay, they have no effective demand.\n\n> The **law of demand** states that a higher price leads to a lower quantity demanded and a lower price leads to a higher quantity demanded\n\nMake it simple, low of demand says that there is an inverse relationship between price and quantity demanded and this relationship determines downward sloping demand curve.\n\n> **Supply** is all the possible quantities that sellers are willing and able to produce at all possible prices.\n\nWhen an economist talks about to supply, they mean the amount of some good or service a\nproducer is willing to supply at each price. Price is what the producer receives for selling one unit of good or service.\n\n> The **low of supply** states that a higher price leads to a higher quantity and lower price leads to lower quantity supplied.\n\nLow of supply says that there is positive relationship between price and quantity supplied, leading to an upward sloping supply curve.\n\nI mentioned earlier that our market is competitive and in competitive market demand for good or service and supply will determine the price. This price is the equilibrium price.\n\n> **Equilibrium price** is the price for which quantity demanded and quantity supplied are equal.\n\nIn our market settings, equilibrium occurs when the price has adjusted until the quantity supplied is equal to quantity demanded. When this equality is violated market experiences disequilibrium. When a market is experiencing a disequilibrium, there will be either a shortage or a surplus.\n\n> When the price is above the equilibrium price, this produce **surplus**, which encourages sellers to lower their prices to eliminate the surplus.\n\n> At any price below the equilibrium price, the **shortage** will exist, which leads to the price of the good increasing.\n\n\n## Model\n\nAt that moment we defined all the necessary terms and notions in our simple economy to continue our analysis and modeling. Now, it's time to ask ourselves. Can we model mathematically this economy and see the dynamics of the buyers and sellers? Yes, we can do and we can go farther and make a simple Python script to make simulations in this economy.\n\nLet's start our modeling part with defining functions for demand and supply. Logically, demand and supply are generated\nfrom some very complicated function and its real anatomy is unknown, but as we are in *simple* economy we can assume that they are linear functions of price:\n\nA liner demand curve:\n\n$$\nQ =\na - b\\cdot p\n$$\n\nA linear supply curve:\n\n$$\nQ =\nc + d\\cdot p\n$$\n\nHere, $p$ is the price paid by the consumer and $Q$ is the quantity. $a$, $b$, $c$, and $d$ are demand and supply parameters.\n\nLet first solve this mathematically. We have the equation for quantity and the parameters $a$ and $b$ are predetermined,\nor we can choose their value. We know that in equilibrium, quantity demanded and quantity supplied are equal.\nSo, by equating our equations and doing some simple algebra we'll get equilibrium price.\nLet denote this price by $P^{*}$.\n\n$$\na - b\\cdot p = c + d\\cdot p \\Rightarrow\n\\\\\n\\\\ \\Rightarrow d\\cdot p + b\\cdot p = a - c\n\\\\\n\\\\ \\Rightarrow P^{*} =\n\\frac{a - c}{d + b}\n$$\n\nBy having $P^{*}$ we have equilibrium price. Now, let me introduce some new notions, which are very natural in\nthis market economy, such as, consumer surplus, producer surplus, and social surplus.\n\n> **Consumer surplus** is the gap between the price that consumers are willing to pay and equilibrium price.\n\n> **Producer surplus** is the gap between the price for which producers are willing to sell a product and market equilibrium price.\n\n> **Social surplus** is the sum of consumer and producer surplus.\n\nTo calculate these values, first, we need to calculate inverse demand and supply function.\nInverse demand function considers price as a function of quantity. We have quantity as a function of a price,\nhence we need to find its inverse.\n\nWe have a linear demand curve, given by\n\n$$\nQ =\na - b\\cdot p\n$$\n\nLet change the notation a little bit and denote demand function in the following way:\n\n$$\nQ(p) =\na - b\\cdot p\n$$\n\nTo find the inverse of this function we have to solve the above function for $p$. Doing simple algebra, yields\n\n$$\np = \\frac{a - Q}{b}\n$$\n\nand this is the same to write\n\n$$\np(Q) =\n\\frac{a - Q}{b}\n$$\n\nDoing the same for supply, we easily find inverse supply function, given by\n\n$$\np(Q) =\n\\frac{Q - c}{d}\n$$\n\nConsumer surplus is the area under inverse demand function and producer surplus is the area above inverse supply function. This may not be clear but after plotting demand and supply curves it will be understandable,\nwhat is consumer and producer surplus and how to calculate them. For general sense, we need integrals of inverse demand and supply functions to calculate surplus. See the [link](https://en.wikipedia.org/wiki/Economic_surplus#Calculation) for more information.\n\nAs we have all the necessary information and equations, we can start to code these equations in Python.\nI'm going to write a simple Python class, which will calculate equilibrium price and quantity, consumer and producer surplus.\n\n::: {#f74f1207 .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib.patches import PathPatch\nfrom matplotlib.path import Path\nfrom scipy.integrate import quad\n\nplt.style.use(\"ggplot\")\n```\n:::\n\n\n::: {#7a33ed05 .cell execution_count=2}\n``` {.python .cell-code}\nclass Market:\n    \"\"\"A class to model a single good market with linear demand and supply functions.\"\"\"\n    def __init__(self, a, b, c, d):\n        self.a = a\n        self.b = b\n        self.c = c\n        self.d = d\n        if a < c:\n            raise ValueError(\"Insufficient demand!\")\n\n    def price(self):\n        \"\"\"Returns equilibrium price\"\"\"\n        return (self.a - self.c) / (self.d + self.b)\n\n    def quantity(self):\n        \"\"\"Returns equilibrium quantity\"\"\"\n        return self.a - self.b * self.price()\n\n    def inverse_demand(self, x):\n        \"\"\"Inverse demand function.\"\"\"\n        return (self.a - x) / self.b\n\n    def inverse_supply(self, x):\n        \"\"\"Inverse supply function.\"\"\"\n        return (x - self.c) / self.d\n\n    def consumer_surplus(self):\n        \"\"\"Calculates consumer surplus.\"\"\"\n        integrand = lambda x: (self.a - x) / self.b\n        area, error = quad(integrand, 0, self.quantity())\n        return area - self.price() * self.quantity()\n\n    def producer_surplus(self):\n        \"\"\"Calculates producer surplus.\"\"\"\n        integrand = lambda x: (x - self.c) / self.d\n        area, error = quad(integrand, 0, self.quantity())\n        return self.price() * self.quantity() - area\n```\n:::\n\n\nLet, test our model with some base line parameters.\n\n::: {#311d90ce .cell execution_count=3}\n``` {.python .cell-code}\na = 15\nb = 0.5\nc = -2\nd = 0.5\n\nm = Market(a, b, c, d)\n```\n:::\n\n\n::: {#7ef44d67 .cell execution_count=4}\n``` {.python .cell-code}\nprint(\"Equilibrium Price = \", m.price())\nprint(\"Equilibrium Quantity = \", m.quantity())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEquilibrium Price =  17.0\nEquilibrium Quantity =  6.5\n```\n:::\n:::\n\n\n::: {#84a42777 .cell execution_count=5}\n``` {.python .cell-code}\nprint('Consumer Surplus =', m.consumer_surplus())\nprint('Producer Surplus =', m.producer_surplus())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConsumer Surplus = 42.25\nProducer Surplus = 42.25\n```\n:::\n:::\n\n\nLet plot inverse demand and inverse supply curves and shade consumer and producer surplus area.\n\n::: {#1c10d554 .cell execution_count=6}\n``` {.python .cell-code}\nq_max = m.quantity() * 2\nq_grid = np.linspace(0.0, q_max, 100)\n\npd = m.inverse_demand(q_grid)\nps = m.inverse_supply(q_grid)\n\nfig, ax = plt.subplots(figsize=(12, 6))\n\nax.plot(q_grid, pd, lw=2, alpha=0.6, label=\"Demand\", color=\"red\")\nax.plot(q_grid, ps, lw=2, alpha=0.6, label=\"Supply\", color=\"blue\")\n\nax.axhline(17, 0, 0.5, linewidth=2, color=\"black\", linestyle=\"dashed\")\nax.axvline(6.5, 0, 0.5, linewidth=2, color=\"black\", linestyle=\"dashed\")\n\npath1 = Path([[0, 17], [0, 30], [6.5, 17], [0, 17]])\npatch1 = PathPatch(path1, facecolor=\"silver\")\nax.add_patch(patch1)\n\npath2 = Path([[0, 4], [0, 17], [6.5, 17], [0, 4]])\npatch2 = PathPatch(path2, facecolor=\"plum\")\nax.add_patch(patch2)\n\nax.text(6.5, 17, \"Equilibrium Point\", fontsize=12)\nax.text(1, 22, \"Consumer Surplus\", fontsize=12)\nax.text(1, 14, \"Producer Surplus\", fontsize=12)\n\nax.text(0, 17, \"$P^{*}$\", fontsize=14)\nax.text(6.5, 0, \"$Q^{*}$\", fontsize=14)\n\nax.set_xlabel(\"Quantity\", labelpad=20)\nax.set_xlim(0, q_max)\nax.set_ylabel(\"Price\")\nax.legend(loc=\"best\")\n```\n\n::: {.cell-output .cell-output-display}\n![](single_market_economy_files/figure-html/cell-7-output-1.png){width=959 height=527}\n:::\n:::\n\n\nIn the above graph, we see the equilibrium point. We can ask the following question.\nWhat will happen to the equilibrium price and quantity if demand or supply curve shits?\nLet make a table and summarize the changes in equilibrium due to changes in supply and demand curve.\n\n\n| Change                             | Change in$P^{*}$                        | Change in$Q^{*}$                        |\n| ------------------------------------ | ----------------------------------------- | ----------------------------------------- |\n| Supply increases                   | $P$ $\\Downarrow$                        | $Q$ $\\Uparrow$                          |\n| Supply decreases                   | $P$ $\\Uparrow$                          | $Q$ $\\Downarrow$                        |\n| Demand increases                   | $P$ $\\Uparrow$                          | $Q$ $\\Uparrow$                          |\n| Demand decreases                   | $P$ $\\Downarrow$                        | $Q$ $\\Downarrow$                        |\n| Demand increases, Supply increases | $P$ $\\Updownarrow$, $\\\\(indeterminate)$ | $Q$ $\\Uparrow$                          |\n| Demand increases, Supply decreases | $P$ $\\Uparrow$                          | $Q$ $\\Updownarrow$, $\\\\(indeterminate)$ |\n| Demand decreases, Supply increases | $P$ $\\Downarrow$                        | $Q$ $\\Updownarrow$, $\\\\(indeterminate)$ |\n| Demand decreases, Supply decreases | $P$ $\\Updownarrow$, $\\\\(indeterminate)$ | $Q$ $\\Downarrow$                        |\n\nFrom the above table, we see that in some cases due to the simultaneous changes in supply and demand\nwe cannot determine equilibrium price or quantity movement. That's the case when other factors are in consideration, but these factors are out of the scope for this blog.\n\n\n# Conclusion\n\nTo sum up, we saw how to model simple one good competitive market both mathematically and programmatically. This simple economy model is a building block of more complex models. I do hope you gained some understanding of building economic models. If you feel ambitious you can introduce government tax in this model and calculate supply with and without tax\nas well as a deadweight loss by imposing government tax and see graphically how the tax affects the supply curve.\n\n\n#### References\n* [Khan Academy](https://www.khanacademy.org/economics-finance-domain/microeconomics)\n* [Quantecon](https://quantecon.org/lectures/)\n\n",
    "supporting": [
      "single_market_economy_files"
    ],
    "filters": [],
    "includes": {}
  }
}